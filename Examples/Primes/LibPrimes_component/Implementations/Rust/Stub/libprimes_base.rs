/*++

Copyright (C) 2019 PrimeDevelopers

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.8.0-develop.

Abstract: This is an autogenerated Rust implementation file in order to allow easy
development of Prime Numbers Library. It needs to be generated only once.

Interface version: 1.2.0

*/


use libprimes_interfaces::*;

// Stub struct to implement the Base trait
pub struct CBase {
  last_error : Option<String>
}

impl Base for CBase {

  // get_last_error_message
  //
  // Returns the last error registered of this class instance
  // * @param[out] error_message - Message of the last error registered
  // * @param[return] has_last_error - Has an error been registered already
  //
  fn get_last_error_message(&mut self, _error_message : &mut String) -> bool {
    match &self.last_error {
      None => false,
      Some(error_val) => {
         *_error_message = error_val.clone();
         true
      }
    }
  }
  // clear_error_messages
  //
  // Clears all registered messages of this class instance
  //
  fn clear_error_messages(&mut self) {
    self.last_error = None;
  }
  // register_error_message
  //
  // Registers an error message with this class instance
  // * @param[in] error_message - Error message to register
  //
  fn register_error_message(&mut self, _error_message : &str) {
    self.last_error = Some(_error_message.to_string());
  }
  
  // class_type_id
  //
  // Get Class Type Id
  // * @param[return] class_type_id - Class type as a 64 bits integer
  //
  fn class_type_id(&mut self) -> u64 {
    0
  }
}


impl CBase {
  pub fn new() -> CBase {
    CBase {
      last_error : None
    }
  }
}