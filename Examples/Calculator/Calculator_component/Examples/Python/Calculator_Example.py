'''++

Copyright (C) 2019 Calculator developers

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.6.0-develop.

Abstract: This is an autogenerated Python application that demonstrates the
 usage of the Python bindings of Calculator library

Interface version: 1.0.0

'''


import os
import sys
sys.path.append(os.path.join(os.path.dirname(os.path.realpath(__file__)), "..", "..", "Bindings", "Python"))
import Calculator


def main():
	libpath = '' # TODO add the location of the shared library binary here
	wrapper = Calculator.Wrapper(os.path.join(libpath, "calculator"))
	
	major, minor, micro = wrapper.GetVersion()
	print("Calculator version: {:d}.{:d}.{:d}".format(major, minor, micro), end="")
	print("")

	calculator = wrapper.CreateCalculator()
	
	calculator.EnlistVariable(wrapper.CreateVariable(2.0))
	calculator.EnlistVariable(wrapper.CreateVariable(3.0))

	print("   sum = " + str(calculator.Add().GetValue()))
	print("Changing the value of the first summand")
	calculator.GetEnlistedVariable(0).SetValue(10)
	print("newSum = " + str(calculator.Add().GetValue()))

if __name__ == "__main__":
	try:
		main()
	except Calculator.ECalculatorException as e:
		print(e)
